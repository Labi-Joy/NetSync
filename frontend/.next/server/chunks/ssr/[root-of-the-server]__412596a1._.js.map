{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/labidev/development/netsync/frontend/src/lib/api.ts"],"sourcesContent":["import axios from 'axios';\nimport Cookies from 'js-cookie';\n\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5000';\n\nexport const api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = Cookies.get('accessToken');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle token refresh\napi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n\n    if (error.response?.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n\n      try {\n        const refreshToken = Cookies.get('refreshToken');\n        if (!refreshToken) {\n          throw new Error('No refresh token');\n        }\n\n        const response = await axios.post(`${API_BASE_URL}/auth/refresh`, {\n          refreshToken,\n        });\n\n        const { accessToken, refreshToken: newRefreshToken } = response.data.tokens;\n        \n        Cookies.set('accessToken', accessToken, { expires: 1 }); // 1 day\n        Cookies.set('refreshToken', newRefreshToken, { expires: 7 }); // 7 days\n\n        originalRequest.headers.Authorization = `Bearer ${accessToken}`;\n        return api(originalRequest);\n      } catch (refreshError) {\n        // Refresh failed, redirect to login\n        Cookies.remove('accessToken');\n        Cookies.remove('refreshToken');\n        window.location.href = '/auth/login';\n        return Promise.reject(refreshError);\n      }\n    }\n\n    return Promise.reject(error);\n  }\n);\n\n// Auth API functions\nexport const authAPI = {\n  register: (userData: any) => api.post('/auth/register', userData),\n  login: (credentials: any) => api.post('/auth/login', credentials),\n  logout: (refreshToken: string) => api.post('/auth/logout', { refreshToken }),\n  getProfile: () => api.get('/auth/profile'),\n};\n\n// User API functions\nexport const userAPI = {\n  getProfile: () => api.get('/api/users/profile'),\n  updateProfile: (data: any) => api.put('/api/users/profile', data),\n  completeOnboarding: (data: any) => api.post('/api/users/onboarding', data),\n  getNetworkingStyle: () => api.get('/api/users/networking-style'),\n};\n\n// Event API functions\nexport const eventAPI = {\n  getEvents: (params?: any) => api.get('/api/events', { params }),\n  getEventById: (id: string) => api.get(`/api/events/${id}`),\n  joinEvent: (id: string) => api.post(`/api/events/${id}/join`),\n  getEventAttendees: (id: string) => api.get(`/api/events/${id}/attendees`),\n  getEventSchedule: (id: string) => api.get(`/api/events/${id}/schedule`),\n};\n\n// Networking API functions\nexport const networkingAPI = {\n  findMatches: (data: any) => api.post('/api/networking/find-matches', data),\n  requestIntroduction: (data: any) => api.post('/api/networking/request-introduction', data),\n  getConnections: (params?: any) => api.get('/api/networking/connections', { params }),\n  updateConnectionStatus: (id: string, data: any) => api.put(`/api/networking/connections/${id}/status`, data),\n  provideFeedback: (data: any) => api.post('/api/networking/feedback', data),\n};\n\n// Bot API functions\nexport const botAPI = {\n  initialize: (data: any) => api.post('/api/bot/initialize', data),\n  sendMessage: (data: any) => api.post('/api/bot/message', data),\n  requestIntroduction: (data: any) => api.post('/api/bot/introduce', data),\n  getSuggestions: (params?: any) => api.get('/api/bot/suggestions', { params }),\n  scheduleMeetup: (data: any) => api.post('/api/bot/schedule-meetup', data),\n  getConversationHistory: (conversationId: string) => api.get(`/api/bot/conversations/${conversationId}`),\n};\n\nexport default api;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///home/labidev/development/netsync/frontend/src/lib/socket.ts"],"sourcesContent":["import { io, Socket } from 'socket.io-client';\nimport Cookies from 'js-cookie';\n\nclass SocketManager {\n  private socket: Socket | null = null;\n  private isConnected = false;\n\n  connect(): Socket | null {\n    if (this.socket && this.isConnected) {\n      return this.socket;\n    }\n\n    const token = Cookies.get('accessToken');\n    if (!token) {\n      console.warn('No access token found, cannot connect to socket');\n      return null;\n    }\n\n    const serverUrl = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5000';\n    \n    this.socket = io(serverUrl, {\n      auth: {\n        token,\n      },\n      autoConnect: true,\n      reconnection: true,\n      reconnectionDelay: 1000,\n      reconnectionAttempts: 5,\n      timeout: 20000,\n    });\n\n    this.setupEventHandlers();\n    return this.socket;\n  }\n\n  private setupEventHandlers(): void {\n    if (!this.socket) return;\n\n    this.socket.on('connect', () => {\n      console.log('Connected to server');\n      this.isConnected = true;\n    });\n\n    this.socket.on('disconnect', (reason) => {\n      console.log('Disconnected from server:', reason);\n      this.isConnected = false;\n    });\n\n    this.socket.on('connect_error', (error) => {\n      console.error('Socket connection error:', error);\n      this.isConnected = false;\n    });\n\n    this.socket.on('error', (error) => {\n      console.error('Socket error:', error);\n    });\n\n    // Networking events\n    this.socket.on('new_match_found', (data) => {\n      console.log('New match found:', data);\n      this.emit('newMatch', data);\n    });\n\n    this.socket.on('introduction_received', (data) => {\n      console.log('Introduction received:', data);\n      this.emit('introductionReceived', data);\n    });\n\n    this.socket.on('meetup_scheduled', (data) => {\n      console.log('Meetup scheduled:', data);\n      this.emit('meetupScheduled', data);\n    });\n\n    this.socket.on('proximity_alert', (data) => {\n      console.log('Proximity alert:', data);\n      this.emit('proximityAlert', data);\n    });\n\n    this.socket.on('event_update', (data) => {\n      console.log('Event update:', data);\n      this.emit('eventUpdate', data);\n    });\n\n    // User status events\n    this.socket.on('user_joined', (data) => {\n      console.log('User joined event:', data);\n      this.emit('userJoined', data);\n    });\n\n    this.socket.on('user_left', (data) => {\n      console.log('User left event:', data);\n      this.emit('userLeft', data);\n    });\n\n    this.socket.on('user_status_changed', (data) => {\n      console.log('User status changed:', data);\n      this.emit('userStatusChanged', data);\n    });\n\n    // Chat events\n    this.socket.on('user_typing', (data) => {\n      this.emit('userTyping', data);\n    });\n\n    this.socket.on('user_stopped_typing', (data) => {\n      this.emit('userStoppedTyping', data);\n    });\n  }\n\n  disconnect(): void {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n      this.isConnected = false;\n    }\n  }\n\n  // Event-specific methods\n  joinEvent(eventId: string): void {\n    if (this.socket && this.isConnected) {\n      this.socket.emit('join_event', eventId);\n    }\n  }\n\n  updateStatus(status: 'online' | 'away' | 'busy'): void {\n    if (this.socket && this.isConnected) {\n      this.socket.emit('update_status', status);\n    }\n  }\n\n  notifyNewMatch(targetUserId: string, matchData: any): void {\n    if (this.socket && this.isConnected) {\n      this.socket.emit('notify_new_match', { targetUserId, matchData });\n    }\n  }\n\n  requestIntroduction(targetUserId: string, message: string): void {\n    if (this.socket && this.isConnected) {\n      this.socket.emit('request_introduction', { targetUserId, message });\n    }\n  }\n\n  scheduleMeetup(participants: string[], meetupData: any): void {\n    if (this.socket && this.isConnected) {\n      this.socket.emit('schedule_meetup', { participants, meetupData });\n    }\n  }\n\n  updateLocation(latitude: number, longitude: number): void {\n    if (this.socket && this.isConnected) {\n      this.socket.emit('update_location', { latitude, longitude });\n    }\n  }\n\n  // Chat methods\n  joinConversation(conversationId: string): void {\n    if (this.socket && this.isConnected) {\n      this.socket.emit('join_conversation', conversationId);\n    }\n  }\n\n  leaveConversation(conversationId: string): void {\n    if (this.socket && this.isConnected) {\n      this.socket.emit('leave_conversation', conversationId);\n    }\n  }\n\n  startTyping(conversationId: string): void {\n    if (this.socket && this.isConnected) {\n      this.socket.emit('typing_start', { conversationId });\n    }\n  }\n\n  stopTyping(conversationId: string): void {\n    if (this.socket && this.isConnected) {\n      this.socket.emit('typing_stop', { conversationId });\n    }\n  }\n\n  // Event listener management\n  private eventHandlers: { [event: string]: Function[] } = {};\n\n  on(event: string, handler: Function): void {\n    if (!this.eventHandlers[event]) {\n      this.eventHandlers[event] = [];\n    }\n    this.eventHandlers[event].push(handler);\n  }\n\n  off(event: string, handler?: Function): void {\n    if (!this.eventHandlers[event]) return;\n\n    if (handler) {\n      this.eventHandlers[event] = this.eventHandlers[event].filter(h => h !== handler);\n    } else {\n      this.eventHandlers[event] = [];\n    }\n  }\n\n  private emit(event: string, data: any): void {\n    if (this.eventHandlers[event]) {\n      this.eventHandlers[event].forEach(handler => handler(data));\n    }\n  }\n\n  // Utility methods\n  isSocketConnected(): boolean {\n    return this.isConnected;\n  }\n\n  getSocket(): Socket | null {\n    return this.socket;\n  }\n}\n\nexport const socketManager = new SocketManager();\nexport default socketManager;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 433, "column": 0}, "map": {"version":3,"sources":["file:///home/labidev/development/netsync/frontend/src/context/AuthContext.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport Cookies from 'js-cookie';\nimport { authAPI, userAPI } from '@/lib/api';\nimport socketManager from '@/lib/socket';\n\ninterface User {\n  _id: string;\n  email: string;\n  name: string;\n  profilePicture?: string;\n  professionalInfo: {\n    title: string;\n    company: string;\n    experience: 'junior' | 'mid' | 'senior' | 'executive';\n    skills: string[];\n    interests: string[];\n  };\n  networkingProfile: {\n    goals: string[];\n    lookingFor: 'mentor' | 'mentee' | 'peers' | 'collaborators' | 'all';\n    communicationStyle: 'proactive' | 'reactive' | 'structured';\n    availability: string[];\n  };\n  currentEvent?: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  isAuthenticated: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  register: (userData: any) => Promise<void>;\n  logout: () => void;\n  updateProfile: (data: any) => Promise<void>;\n  refreshUser: () => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  const isAuthenticated = !!user;\n\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      socketManager.connect();\n      if (user?.currentEvent) {\n        socketManager.joinEvent(user.currentEvent);\n      }\n    } else {\n      socketManager.disconnect();\n    }\n  }, [isAuthenticated, user?.currentEvent]);\n\n  const checkAuthStatus = async () => {\n    try {\n      const accessToken = Cookies.get('accessToken');\n      if (!accessToken) {\n        setLoading(false);\n        return;\n      }\n\n      const response = await userAPI.getProfile();\n      setUser(response.data.user);\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      // Clear invalid tokens\n      Cookies.remove('accessToken');\n      Cookies.remove('refreshToken');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (email: string, password: string) => {\n    try {\n      const response = await authAPI.login({ email, password });\n      const { user: userData, tokens } = response.data;\n\n      // Store tokens\n      Cookies.set('accessToken', tokens.accessToken, { expires: 1 });\n      Cookies.set('refreshToken', tokens.refreshToken, { expires: 7 });\n\n      setUser(userData);\n    } catch (error: any) {\n      const message = error.response?.data?.error || 'Login failed';\n      throw new Error(message);\n    }\n  };\n\n  const register = async (userData: any) => {\n    try {\n      const response = await authAPI.register(userData);\n      const { user: newUser, tokens } = response.data;\n\n      // Store tokens\n      Cookies.set('accessToken', tokens.accessToken, { expires: 1 });\n      Cookies.set('refreshToken', tokens.refreshToken, { expires: 7 });\n\n      setUser(newUser);\n    } catch (error: any) {\n      const message = error.response?.data?.error || 'Registration failed';\n      throw new Error(message);\n    }\n  };\n\n  const logout = () => {\n    try {\n      const refreshToken = Cookies.get('refreshToken');\n      if (refreshToken) {\n        authAPI.logout(refreshToken).catch(console.error);\n      }\n    } catch (error) {\n      console.error('Logout API call failed:', error);\n    } finally {\n      // Clear tokens and user state\n      Cookies.remove('accessToken');\n      Cookies.remove('refreshToken');\n      setUser(null);\n      socketManager.disconnect();\n    }\n  };\n\n  const updateProfile = async (data: any) => {\n    try {\n      const response = await userAPI.updateProfile(data);\n      setUser(response.data.user);\n    } catch (error: any) {\n      const message = error.response?.data?.error || 'Profile update failed';\n      throw new Error(message);\n    }\n  };\n\n  const refreshUser = async () => {\n    try {\n      const response = await userAPI.getProfile();\n      setUser(response.data.user);\n    } catch (error) {\n      console.error('Failed to refresh user:', error);\n    }\n  };\n\n  const value: AuthContextType = {\n    user,\n    loading,\n    isAuthenticated,\n    login,\n    register,\n    logout,\n    updateProfile,\n    refreshUser,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n\nexport function useAuth(): AuthContextType {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n\nexport default AuthContext;"],"names":[],"mappings":";;;;;;;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAuCA,MAAM,4BAAc,IAAA,sNAAa,EAA8B;AAExD,SAAS,aAAa,EAAE,QAAQ,EAA2B;IAChE,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,iNAAQ,EAAc;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAC;IAEvC,MAAM,kBAAkB,CAAC,CAAC;IAE1B,IAAA,kNAAS,EAAC;QACR;IACF,GAAG,EAAE;IAEL,IAAA,kNAAS,EAAC;QACR,IAAI,iBAAiB;YACnB,2IAAa,CAAC,OAAO;YACrB,IAAI,MAAM,cAAc;gBACtB,2IAAa,CAAC,SAAS,CAAC,KAAK,YAAY;YAC3C;QACF,OAAO;YACL,2IAAa,CAAC,UAAU;QAC1B;IACF,GAAG;QAAC;QAAiB,MAAM;KAAa;IAExC,MAAM,kBAAkB;QACtB,IAAI;YACF,MAAM,cAAc,gKAAO,CAAC,GAAG,CAAC;YAChC,IAAI,CAAC,aAAa;gBAChB,WAAW;gBACX;YACF;YAEA,MAAM,WAAW,MAAM,wIAAO,CAAC,UAAU;YACzC,QAAQ,SAAS,IAAI,CAAC,IAAI;QAC5B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,sBAAsB;YACpC,uBAAuB;YACvB,gKAAO,CAAC,MAAM,CAAC;YACf,gKAAO,CAAC,MAAM,CAAC;QACjB,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,QAAQ,OAAO,OAAe;QAClC,IAAI;YACF,MAAM,WAAW,MAAM,wIAAO,CAAC,KAAK,CAAC;gBAAE;gBAAO;YAAS;YACvD,MAAM,EAAE,MAAM,QAAQ,EAAE,MAAM,EAAE,GAAG,SAAS,IAAI;YAEhD,eAAe;YACf,gKAAO,CAAC,GAAG,CAAC,eAAe,OAAO,WAAW,EAAE;gBAAE,SAAS;YAAE;YAC5D,gKAAO,CAAC,GAAG,CAAC,gBAAgB,OAAO,YAAY,EAAE;gBAAE,SAAS;YAAE;YAE9D,QAAQ;QACV,EAAE,OAAO,OAAY;YACnB,MAAM,UAAU,MAAM,QAAQ,EAAE,MAAM,SAAS;YAC/C,MAAM,IAAI,MAAM;QAClB;IACF;IAEA,MAAM,WAAW,OAAO;QACtB,IAAI;YACF,MAAM,WAAW,MAAM,wIAAO,CAAC,QAAQ,CAAC;YACxC,MAAM,EAAE,MAAM,OAAO,EAAE,MAAM,EAAE,GAAG,SAAS,IAAI;YAE/C,eAAe;YACf,gKAAO,CAAC,GAAG,CAAC,eAAe,OAAO,WAAW,EAAE;gBAAE,SAAS;YAAE;YAC5D,gKAAO,CAAC,GAAG,CAAC,gBAAgB,OAAO,YAAY,EAAE;gBAAE,SAAS;YAAE;YAE9D,QAAQ;QACV,EAAE,OAAO,OAAY;YACnB,MAAM,UAAU,MAAM,QAAQ,EAAE,MAAM,SAAS;YAC/C,MAAM,IAAI,MAAM;QAClB;IACF;IAEA,MAAM,SAAS;QACb,IAAI;YACF,MAAM,eAAe,gKAAO,CAAC,GAAG,CAAC;YACjC,IAAI,cAAc;gBAChB,wIAAO,CAAC,MAAM,CAAC,cAAc,KAAK,CAAC,QAAQ,KAAK;YAClD;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2BAA2B;QAC3C,SAAU;YACR,8BAA8B;YAC9B,gKAAO,CAAC,MAAM,CAAC;YACf,gKAAO,CAAC,MAAM,CAAC;YACf,QAAQ;YACR,2IAAa,CAAC,UAAU;QAC1B;IACF;IAEA,MAAM,gBAAgB,OAAO;QAC3B,IAAI;YACF,MAAM,WAAW,MAAM,wIAAO,CAAC,aAAa,CAAC;YAC7C,QAAQ,SAAS,IAAI,CAAC,IAAI;QAC5B,EAAE,OAAO,OAAY;YACnB,MAAM,UAAU,MAAM,QAAQ,EAAE,MAAM,SAAS;YAC/C,MAAM,IAAI,MAAM;QAClB;IACF;IAEA,MAAM,cAAc;QAClB,IAAI;YACF,MAAM,WAAW,MAAM,wIAAO,CAAC,UAAU;YACzC,QAAQ,SAAS,IAAI,CAAC,IAAI;QAC5B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2BAA2B;QAC3C;IACF;IAEA,MAAM,QAAyB;QAC7B;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IACF;IAEA,qBAAO,8OAAC,YAAY,QAAQ;QAAC,OAAO;kBAAQ;;;;;;AAC9C;AAEO,SAAS;IACd,MAAM,UAAU,IAAA,mNAAU,EAAC;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;uCAEe","debugId":null}}]
}